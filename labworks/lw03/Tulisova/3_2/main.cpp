/* Пример создания нового процесса с разной работой процессов
ребенка и родителя */
#include <sys/types.h>
#include <unistd.h>
#include <stdio.h>
int main()
{ pid_t pid, ppid, new_proc;
	printf("Лабораторная работа №3. Часть 2. \n Подготовила студентка гр.ИСТбд-22 Тулисова Анна.\n");
	int a = 0;
/* При успешном создании нового процесса с этого места псевдопараллельно
начинают работать два процесса: старый и новый */
	new_proc = fork();
/* Узнаем идентификаторы текущего и родительского процесса (в каждом из
процессов !!!) */
    ppid = getppid();
	pid = getpid();

/* Перед выполнением следующего выражения значение переменной a в
обоих процессах равно 0 */
	if (new_proc == -1)
		printf("Ошибка!\n");
	else
	{
		if (new_proc == 0)
			printf("Запущен порождённый процесс %d\n", new_proc);
		else printf("Запущен родительский процесс %d\n", new_proc);
	}

	for (int i = 0; i<10; i++){
		a++;
/* Печатаем значения PID, PPID и вычисленное значение переменной a (в
каждом из процессов !!!) */
		printf("My pid = %d, my ppid = %d, result = %d\n", (int)pid, (int)ppid, a);
	}
	return 0;
}
