#include <sys/types.h>
#include <unistd.h>
#include <stdio.h>
//Лабораторная работа №3.5
//Системный вызов exec()
//Выполнила студентка гр.ИСТбд-22 Гуськова Ю.А.
int main(int argc, char *argv[], char *envp[])
{
    printf("Лабораторная работа №3.5\n");
    printf("Системный вызов exec()\n");
    printf("Выполнила студентка гр.ИСТбд-22 Гуськова Ю.А.\n");
    printf("Задание: модифицируйте программу, созданную при выполнении задания,\
            использующую вызов fork() с разным поведением процессов ребенка и родителя,\
            так, чтобы порожденный процесс запускал на исполнение новую (любую) программу.\n");
    pid_t pid;
//при успеном создани нового процесса с этого места псевдопараллельно начинают работать два процесса: старый и новый
	pid = fork();//fork возвращает ноль, когда это ребенок
	//если значение идентификатора текущего процесса равно нулю
	if (pid == 0)
        //запускает программу, аргументы передает в виде списка, так же передается среда окружения
		execle("/bin/cat", "/bin/cat","/home/student/Desktop/lab3/lab3_4/lab3", 0, envp);
	else
        printf("This is the parent");
return 0;
}
